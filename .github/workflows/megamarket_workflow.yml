name: Megamarket-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        cd megamarket
        pip install -r requirements.txt 

    - name: Test with flake8
      run: |
        python -m flake8

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push backend to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            context: megamarket/
            push: true
            tags: ferr546/megamarket_api

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - uses: actions/checkout@v1
      - name: Install Open VPN
        run: sudo apt-get install openvpn
      - name: Connect VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        with:
          PING_URL: ${{ secrets.HOST }}
          FILE_OVPN: '.github/vpn/config.ovpn'
        env:
          CA_CRT: ${{ secrets.CA_CRT}}
          USER_CRT: ${{ secrets.USER_CRT }}
          USER_KEY: ${{ secrets.USER_KEY }}
      - name: Check Connect VPN
        run: echo ${{ steps.connect_vpn.outputs.STATUS }}
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            rm -f .env
            touch .env
            sudo docker-compose stop
            sudo docker-compose rm -f web
            echo SECRET_KEY='${{ secrets.SECRET_KEY }}' >> .env
            echo ALLOWED_HOSTS='${{ secrets.ALLOWED_HOSTS }}' >> .env
            echo DB_ENGINE='${{ secrets.DB_ENGINE }}' >> .env
            echo DB_NAME='${{ secrets.DB_NAME }}' >> .env
            echo POSTGRES_USER='${{ secrets.POSTGRES_USER }}' >> .env
            echo POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' >> .env
            echo DB_HOST='${{ secrets.DB_HOST }}' >> .env
            echo DB_PORT='${{ secrets.DB_PORT }}' >> .env
            sudo docker-compose pull && sudo docker-compose up -d 
      - name: kill vpn
        if: always()
        run: sudo killall openvpn